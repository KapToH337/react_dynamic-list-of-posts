{"version":3,"sources":["components/PostsList/PostsList.jsx","api/posts.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","api/comments.js","App.jsx","index.js"],"names":["PostsList","userId","selectPostId","useState","posts","setPosts","selectUser","setUser","selectPost","setPost","useEffect","fetch","then","response","json","data","getUserPosts","className","map","post","key","id","title","type","onClick","NewCommentForm","selectedPost","addNewCom","newCom","setCom","name","setName","email","setMail","addCom","postId","body","onSubmit","event","preventDefault","placeholder","value","onChange","target","required","PostDetails","selectedPostId","comments","setComments","hideCom","setHide","getPostComments","com","deleteCom","method","deleteComment","currentComment","filter","comment","length","headers","JSON","stringify","addComment","result","App","setUserId","setPostId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d99be686.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getUserPosts } from '../../api/posts';\nimport './PostsList.scss';\n\nexport const PostsList = ({ userId, selectPostId }) => {\n  const [posts, setPosts] = useState([]);\n  const [selectUser, setUser] = useState(0);\n  const [selectPost, setPost] = useState(0);\n\n  useEffect(() => {\n    fetch('https://mate-api.herokuapp.com/posts')\n      .then(response => response.json())\n      .then(posts => setPosts(posts.data));\n  }, []);\n\n  if (selectUser !== userId) {\n    getUserPosts(userId)\n      .then(posts => setPosts(posts.data));\n    setUser(userId);\n  }\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li\n            key={post.id}\n            className=\"PostsList__item\"\n          >\n            <div>\n              <b>\n                [User #\n                {post.userId}\n                ]:\n                {' '}\n              </b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => {\n                selectPostId(post.id);\n                selectPost === post.id ? setPost(0) : setPost(post.id);\n              }}\n            >\n              {selectPost !== post.id ? 'Open' : 'Close'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","export const getUserPosts = (userId) => {\n  if (userId === '0') {\n    return fetch(`https://mate-api.herokuapp.com/posts`)\n      .then(response => response.json());\n  }\n\n  return fetch(`https://mate-api.herokuapp.com/posts?userId=${userId}`)\n    .then(response => response.json());\n};\n\nexport const getPostDetails = postId => fetch(\n  `https://mate-api.herokuapp.com/posts/${postId}`,\n)\n  .then(response => response.json());\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ selectedPost, addNewCom }) => {\n  const [newCom, setCom] = useState('');\n  const [name, setName] = useState('');\n  const [email, setMail] = useState('');\n\n  const addCom = {\n    postId: selectedPost.id,\n    name,\n    email,\n    body: newCom,\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        event.preventDefault();\n\n        addNewCom(addCom);\n\n        setCom('');\n        setName('');\n        setMail('');\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={(event) => {\n            setName(event.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(event) => {\n            setMail(event.target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={newCom}\n          onChange={(event) => {\n            setCom(event.target.value);\n          }}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deleteComment, addComment } from '../../api/comments';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [selectedPost, setPost] = useState(0);\n  const [comments, setComments] = useState([]);\n  const [hideCom, setHide] = useState(true);\n\n  useEffect(() => {\n    getPostDetails(selectedPostId)\n      .then(post => setPost(post.data));\n\n    getPostComments(selectedPostId)\n      .then(com => setComments(com.data));\n  }, [selectedPostId]);\n\n  const addNewCom = (comment) => {\n    addComment(comment)\n      .then((result) => {\n        setComments(currentComment => [...currentComment, result]);\n      });\n  };\n\n  const deleteCom = (id) => {\n    deleteComment(id)\n      .then(() => {\n        setComments(currentComment => (\n          currentComment.filter(comment => comment.id !== id)\n        ));\n      });\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{selectedPost.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            setHide(!hideCom);\n          }}\n        >\n          {hideCom ? 'Show' : 'Hide'}\n          {' '}\n          {comments.length}\n          {' '}\n          comments\n        </button>\n\n        {!hideCom && (\n          comments.length > 0 ? (\n            <ul className=\"PostDetails__list\">\n              {comments.map(com => (\n                <li\n                  className=\"PostDetails__list-item\"\n                  key={com.id}\n                >\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    onClick={() => {\n                      deleteCom(com.id);\n                    }}\n                  >\n                    X\n                  </button>\n                  <p>{com.body}</p>\n                </li>\n              ))}\n            </ul>\n          ) : <h3>You will be the first to leave your comment</h3>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            selectedPost={selectedPost}\n            addNewCom={addNewCom}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","export const getPostComments = postId => fetch(\n  `https://mate-api.herokuapp.com/comments?postId=${postId}`,\n)\n  .then(response => response.json());\n\nexport const addComment = comment => fetch(\n  `https://mate-api.herokuapp.com/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(comment),\n  },\n)\n  .then(response => response.json())\n  .then(com => com.data);\n\nexport const deleteComment = id => fetch(\n  `https://mate-api.herokuapp.com/comments/${id}`, {\n    method: 'DELETE',\n  },\n)\n  .then(response => response.json())\n  .then(com => com.data);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [userId, setUserId] = useState(0);\n  const [selectedPostId, setPostId] = useState(0);\n\n  const selectPostId = (postId) => {\n    if (selectedPostId === postId) {\n      setPostId(0);\n    } else {\n      setPostId(postId);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={userId}\n            onChange={(event) => {\n              setUserId(event.target.value);\n            }}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={userId}\n            selectPostId={selectPostId}\n          />\n        </div>\n\n        {selectedPostId !== 0 && (\n          <div className=\"App__content\">\n            <PostDetails\n              selectedPostId={selectedPostId}\n            />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}